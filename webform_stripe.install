<?php

/**
 * Implements hook_requirements().
 */
function webform_stripe_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    $t = get_t();

    // Check for the Stripe PHP library.
    $stripe = libraries_load('stripe-php');
    if ($stripe['loaded']) {
      $requirements['webform_stripe_library'] = array(
        'title' => $t('Stripe PHP library'),
        'value' => $t('Installed'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['webform_stripe_library'] = array(
        'title' => $t('Stripe PHP library'),
        'value' => $t('Missing!'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('Stripe library missing. Download the Stripe library from <a href="!url">!url</a> and place it at %path.', array(
          '!url' => 'https://github.com/stripe/stripe-php',
          '%path' => 'sites/all/libraries/stripe-php',
        )),
      );
    }

    // Check for Stripe keys.
    if (variable_get('webform_stripe_test_secret_key', '') && variable_get('webform_stripe_test_publishable_key', '') && variable_get('webform_stripe_live_secret_key', '') && variable_get('webform_stripe_live_publishable_key', '')) {
      $requirements['webform_stripe_keys'] = array(
        'title' => $t('Stripe API keys'),
        'value' => $t('Configured'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['webform_stripe_keys'] = array(
        'title' => $t('Stripe API keys'),
        'value' => $t('Not configured'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('Stripe API keys are not configured. <a href="!url">Configure them here</a>.', array(
          '!url' => url('admin/config/services/webform-stripe'),
        )),
      );
    }
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function webform_stripe_uninstall() {
  // Delete variables.
  variable_del('webform_stripe_test_secret_key');
  variable_del('webform_stripe_test_publishable_key');
  variable_del('webform_stripe_live_secret_key');
  variable_del('webform_stripe_live_publishable_key');
  variable_del('webform_stripe_checkout_settings');

  // Delete Stripe Payment components and their data from webforms.
  $cids = db_query("SELECT cid FROM {webform_component} WHERE type = 'webform_stripe'")->fetchCol();
  if (!empty($cids)) {
    db_query("DELETE FROM {webform_component} WHERE type = 'webform_stripe'");
    db_query("DELETE FROM {webform_submitted_data} WHERE cid IN (:cid)", array(':cid' => $cids));
  }
}

/**
 * Grant "administer webform stripe" permission to appropriate users.
 */
function webform_stripe_update_7000() {
  $roles = user_roles(TRUE, 'administer site configuration');
  foreach ($roles as $rid => $role) {
    user_role_grant_permissions($rid, array('administer webform stripe'));
  }

  if (!empty($roles)) {
    return t('"Administer Webform Stripe settings" permission was granted to: @roles.', array(
      '@roles' => check_plain(implode(', ', $roles)),
    ));
  }
}

/**
 * Sets amount multiplier to 0 for existing Stripe components.
 */
function webform_stripe_update_7001() {
  $components = db_query("SELECT * FROM {webform_component} WHERE type = 'webform_stripe'")->fetchAll();
  foreach ($components as $component) {
    $extra = unserialize($component->extra);
    $extra['amount_multiplier'] = 0;
    db_query("UPDATE {webform_component} SET extra = :extra WHERE nid = :nid AND cid = :cid", array(
      ':extra' => serialize($extra),
      ':nid' => $component->nid,
      ':cid' => $component->cid,
    ));
  }
}

/**
 * Converts old API keys to live keys.
 */
function webform_stripe_update_7002() {
  variable_set('webform_stripe_live_secret_key', variable_get('webform_stripe_secret_key', ''));
  variable_set('webform_stripe_live_publishable_key', variable_get('webform_stripe_publishable_key', ''));
  variable_del('webform_stripe_secret_key');
  variable_del('webform_stripe_publishable_key');
  drupal_set_message(t('Each webform can now use either test or live API keys, so the existing API keys were converted to live keys. You can <a href="!url">set your test API keys</a> and configure each webform to use either test or live keys.', array(
    '!url' => url('admin/config/services/webform-stripe'),
  )), 'warning');
}
